#!jx9 rsync script
# uskee.org
#

import 'scripts/jx9_misc.jx9';

function test_neon_http($conf)
{
    # get config
    $hostname = $conf.hostname; # "127.0.0.1"
    $port = $conf.port;         # 5984
    $method = $conf.method;     # GET, PUT, POST, DELETE
    $path = $conf.path;         # "/test_db/_all_docs"
    $authen = $conf.authen;
    $req_body = $conf.body;

    $proto = {scheme:"http", hostname:$hostname, port:$port};
    $session = ne_session_create($proto);
    if ($session <= 0) {
        log_error("fail to ne_session_create");
        return NULL;
    }
    ne_set_useragent({session:$session, product:"Jx9Agent/1.0"});

    $head = {session:$session, method:$method, path:$path};
    $request = ne_request_create($head);
    if ($request <= 0) {
        log_error("fail to ne_request_create");
        return NULL;
    }

    # add header
    #$authen = "Basic admin1:passwd";
    #$authen = "Basic YWRtaW4xOnBhc3N3ZA==";
    $req_head = {
        "Host": "$hostname:$port",
        "Accept": "application/json",
        "Authorization": $authen,
        #"User-Agent": "Jx9Agent/1.0",
        #"Content-Length": strlen($req_data),
    };
    foreach ($req_head as $key, $val) {
        ne_add_request_header({request:$request, name:$key, value:$val});
    }

    # add content and content-length
    if ($req_body) {
        $ctype = {request:$request, name:"Content-Type", value:"application/json"};
        ne_add_request_header($ctype);
        $ctype = {request:$request, name:"Content-Length", value:strlen($req_body)};
        ne_add_request_header($ctype);
        $cbody = {request:$request, buffer:"$req_body", count:strlen($req_body)};
        ne_set_request_body_buffer($cbody);
    }

    $resp_body = {request:$request};
    $ret = ne_request_dispatch($resp_body);
    if ($ret == 0 && $resp_body["Content"]) {
        $resp["Content"] = json_decode($resp_body["Content"]);
        $resp["Content-Length"] = $resp_body["Content-Length"];
        #print $resp["Content"];
    }else {
        log_error("ne_request_dispatch: $ret"); 
    }

    # get response
    #$resp_head = {request:$request, name:"Content-Length"};
    #$ret = ne_get_response_header($resp_head);
    #print "ne_get_reponse_header: $ret, $resp_head.value";

    # get status
    $resp_status = {request:$request};
    $ret = ne_get_status($resp_status);
    if ($ret == 0) {
        $resp["code"] = $resp_status.code;
        $resp["klass"] = $resp_status.klass;
        $resp["reason"] = $resp_status.reason;
    }else {
        log_error("ne_get_status: $ret, $resp_status");
    }

    $ret = ne_request_destroy({request:$request});
    #print "ne_request_destroy: $ret";
    $ret = ne_close_connection({session:$session});
    #print "ne_close_connection: $ret";
    $ret = ne_session_destroy({session:$session});
    #print "ne_session_destroy: $ret";
    return $resp;
}

$http_conf = {
    hostname: "127.0.0.1",
    port: 5984,
    method: "GET",
    path: "/test_db/_all_docs",
    #authen: "Basic YWRtaW4xOnBhc3N3ZA==",
    body: "",
};
#print test_neon_http($http_conf);
#return;

#########
# step: check account
$jx9_user = $eau_jx9_arg.account.id;
$jx9_passwd = $eau_jx9_arg.accout.passwd;
if (!$jx9_user) {
    $jx9_user = "user1@gmail.com";
    $jx9_passwd = "";
}

$http_conf.path = "/test_account/$jx9_user";
$resp = test_neon_http($http_conf);
$klass = $resp["Content"]["klass"];
if ($klass && $klass != 2) {
    log_error("fail to request: $http_conf.path");
    return;
}
$passwd = $resp["Content"]["passwd"];
if ($passwd && $passwd != $jx9_passwd) {
    log_error("invalid passwd");
    return;
}
print $resp;


